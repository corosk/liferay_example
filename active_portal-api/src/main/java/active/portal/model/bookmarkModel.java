/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package active.portal.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the bookmark service. Represents a row in the &quot;active_bookmark&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link active.portal.model.impl.bookmarkModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link active.portal.model.impl.bookmarkImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see bookmark
 * @see active.portal.model.impl.bookmarkImpl
 * @see active.portal.model.impl.bookmarkModelImpl
 * @generated
 */
@ProviderType
public interface bookmarkModel extends BaseModel<bookmark>, ShardedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a bookmark model instance should use the {@link bookmark} interface instead.
	 */

	/**
	 * Returns the primary key of this bookmark.
	 *
	 * @return the primary key of this bookmark
	 */
	public Long getPrimaryKey();

	/**
	 * Sets the primary key of this bookmark.
	 *
	 * @param primaryKey the primary key of this bookmark
	 */
	public void setPrimaryKey(Long primaryKey);

	/**
	 * Returns the company ID of this bookmark.
	 *
	 * @return the company ID of this bookmark
	 */
	@AutoEscape
	@Override
	public String getCompanyId();

	/**
	 * Sets the company ID of this bookmark.
	 *
	 * @param companyId the company ID of this bookmark
	 */
	@Override
	public void setCompanyId(String companyId);

	/**
	 * Returns the group ID of this bookmark.
	 *
	 * @return the group ID of this bookmark
	 */
	@AutoEscape
	public String getGroupId();

	/**
	 * Sets the group ID of this bookmark.
	 *
	 * @param groupId the group ID of this bookmark
	 */
	public void setGroupId(String groupId);

	/**
	 * Returns the bookmark_id of this bookmark.
	 *
	 * @return the bookmark_id of this bookmark
	 */
	public Long getBookmark_id();

	/**
	 * Sets the bookmark_id of this bookmark.
	 *
	 * @param bookmark_id the bookmark_id of this bookmark
	 */
	public void setBookmark_id(Long bookmark_id);

	/**
	 * Returns the bookmark_url of this bookmark.
	 *
	 * @return the bookmark_url of this bookmark
	 */
	@AutoEscape
	public String getBookmark_url();

	/**
	 * Sets the bookmark_url of this bookmark.
	 *
	 * @param bookmark_url the bookmark_url of this bookmark
	 */
	public void setBookmark_url(String bookmark_url);

	/**
	 * Returns the bookmark_title of this bookmark.
	 *
	 * @return the bookmark_title of this bookmark
	 */
	@AutoEscape
	public String getBookmark_title();

	/**
	 * Sets the bookmark_title of this bookmark.
	 *
	 * @param bookmark_title the bookmark_title of this bookmark
	 */
	public void setBookmark_title(String bookmark_title);

	/**
	 * Returns the user ID of this bookmark.
	 *
	 * @return the user ID of this bookmark
	 */
	public Long getUserId();

	/**
	 * Sets the user ID of this bookmark.
	 *
	 * @param userId the user ID of this bookmark
	 */
	public void setUserId(Long userId);

	/**
	 * Returns the content of this bookmark.
	 *
	 * @return the content of this bookmark
	 */
	@AutoEscape
	public String getContent();

	/**
	 * Sets the content of this bookmark.
	 *
	 * @param content the content of this bookmark
	 */
	public void setContent(String content);

	/**
	 * Returns the create_date of this bookmark.
	 *
	 * @return the create_date of this bookmark
	 */
	public Date getCreate_date();

	/**
	 * Sets the create_date of this bookmark.
	 *
	 * @param create_date the create_date of this bookmark
	 */
	public void setCreate_date(Date create_date);

	/**
	 * Returns the update_date of this bookmark.
	 *
	 * @return the update_date of this bookmark
	 */
	public Date getUpdate_date();

	/**
	 * Sets the update_date of this bookmark.
	 *
	 * @param update_date the update_date of this bookmark
	 */
	public void setUpdate_date(Date update_date);

	/**
	 * Returns the is_delete of this bookmark.
	 *
	 * @return the is_delete of this bookmark
	 */
	public Boolean getIs_delete();

	/**
	 * Sets the is_delete of this bookmark.
	 *
	 * @param is_delete the is_delete of this bookmark
	 */
	public void setIs_delete(Boolean is_delete);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(active.portal.model.bookmark bookmark);

	@Override
	public int hashCode();

	@Override
	public CacheModel<active.portal.model.bookmark> toCacheModel();

	@Override
	public active.portal.model.bookmark toEscapedModel();

	@Override
	public active.portal.model.bookmark toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}